import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
import pandas as pd
import numpy as np

# Load dataset from CSV file
data = pd.read_csv(r"C:\Users\ompaw\Downloads\boston_housing.csv")

# Separate features and target
x = data.drop("MEDV", axis=1).values  # 'MEDV' is the target column (Median value of owner-occupied homes)
y = data["MEDV"].values

# Split into training and testing sets
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)

# Normalize the input features
scaler = StandardScaler()
x_train = scaler.fit_transform(x_train)
x_test = scaler.transform(x_test)

# Build the Deep Neural Network model
model = Sequential([
    Dense(64, activation='relu', input_shape=(x_train.shape[1],)),
    Dense(32, activation='relu'),
    Dense(1)
])
model.compile(optimizer='adam', loss='mse', metrics=['mae'])

# Train the model
model.fit(x_train, y_train, epochs=100, validation_split=0.2, verbose=1)

# Evaluate the model
loss, mae = model.evaluate(x_test, y_test, verbose=2)
print(f"Test Mean Absolute Error: {mae:.2f}")

# Make predictions
predictions = model.predict(x_test[:5]).flatten()
print("Sample Predictions:", predictions)
print("Actual Values     :", y_test[:5])

